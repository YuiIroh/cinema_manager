{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\src\\views\\movie\\MovieCategory.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\src\\views\\movie\\MovieCategory.vue","mtime":1651665518000},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688267736415},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1688267739465},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688267736415},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1688267740672}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTW92aWVDYXRlZ29yeSIsCiAgLy8gdGhpcy4kbWVzc2FnZeWSjHRoaXMuJGNvbmZpcm3pg73lsZ7kuo7ljp/lnovmjILovb0sIOWcqGVsZW1lbnQuanPkuK3phY3nva4KICAvLyBWdWUucHJvdG90eXBlLiRtZXNzYWdlID0gTWVzc2FnZQogIC8vIFZ1ZS5wcm90b3R5cGUuJGNvbmZpcm0gPSBNZXNzYWdlQm94LmNvbmZpcm0KICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcXVlcnlJbmZvOiB7CiAgICAgICAgcXVlcnk6ICcnLAogICAgICAgIHBhZ2VOdW06IDEsCiAgICAgICAgcGFnZVNpemU6IDcKICAgICAgfSwKICAgICAgbW92aWVDYXRlZ29yeUxpc3Q6IFtdLAogICAgICB0b3RhbDogMCwKICAgICAgLy/mjqfliLblr7nor53moYbnmoTmmL7npLrkuI7pmpDol48KICAgICAgYWRkRGlhbG9nVmlzaWJsZTogZmFsc2UsCiAgICAgIC8v5re75Yqg57G75Yir55qE6KGo5Y2V5pWw5o2uCiAgICAgIGFkZEZvcm06IHsKICAgICAgICBtb3ZpZUNhdGVnb3J5TmFtZTogJycKICAgICAgfSwKICAgICAgLy/pqozor4HooajljZXop4TliJnlr7nosaEKICAgICAgYWRkRm9ybVJ1bGVzOiB7CiAgICAgICAgbW92aWVDYXRlZ29yeU5hbWU6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICfor7fovpPlhaXnlLXlvbHnsbvliKsnLCB0cmlnZ2VyOiAnYmx1cicgfQogICAgICAgIF0KICAgICAgfSwKICAgICAgZWRpdERpYWxvZ1Zpc2libGU6IGZhbHNlLAogICAgICBlZGl0Rm9ybToge30sCiAgICAgIGVkaXRGb3JtUnVsZXM6IHsKICAgICAgICBtb3ZpZUNhdGVnb3J5TmFtZTogWwogICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+ivt+i+k+WFpeeUteW9seexu+WIqycsIHRyaWdnZXI6ICdibHVyJyB9CiAgICAgICAgXQogICAgICB9LAogICAgICBtdWx0aXBsZVNlbGVjdGlvbjogW10KICAgIH0KICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldE1vdmllQ2F0ZWdvcnlMaXN0KCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldE1vdmllQ2F0ZWdvcnlMaXN0KCkgewogICAgICBjb25zdCBfdGhpcyA9IHRoaXM7CiAgICAgIGF4aW9zLmdldCgnc3lzTW92aWVDYXRlZ29yeS9maW5kJywge3BhcmFtczogX3RoaXMucXVlcnlJbmZvfSkudGhlbihyZXNwID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwKQogICAgICAgIF90aGlzLm1vdmllQ2F0ZWdvcnlMaXN0ID0gcmVzcC5kYXRhLmRhdGE7CiAgICAgICAgX3RoaXMudG90YWwgPSByZXNwLmRhdGEudG90YWw7CiAgICAgICAgX3RoaXMucXVlcnlJbmZvLnBhZ2VTaXplID0gcmVzcC5kYXRhLnBhZ2VTaXplOwogICAgICAgIF90aGlzLnF1ZXJ5SW5mby5wYWdlTnVtID0gcmVzcC5kYXRhLnBhZ2VOdW07CiAgICAgIH0pCiAgICB9LAogICAgaGFuZGxlU2l6ZUNoYW5nZShuZXdTaXplKSB7CiAgICAgIHRoaXMucXVlcnlJbmZvLnBhZ2VTaXplID0gbmV3U2l6ZQogICAgICB0aGlzLmdldE1vdmllQ2F0ZWdvcnlMaXN0KCkKICAgICAgY29uc29sZS5sb2cobmV3U2l6ZSkKICAgIH0sCiAgICBoYW5kbGVDdXJyZW50Q2hhbmdlKG5ld1BhZ2UpIHsKICAgICAgdGhpcy5xdWVyeUluZm8ucGFnZU51bSA9IG5ld1BhZ2UKICAgICAgdGhpcy5nZXRNb3ZpZUNhdGVnb3J5TGlzdCgpCiAgICAgIGNvbnNvbGUubG9nKG5ld1BhZ2UpCiAgICB9LAogICAgLy8g55uR5ZCs5re75Yqg5a+56K+d5qGG55qE5YWz6Zet5LqL5Lu2CiAgICBhZGREaWFsb2dDbG9zZWQoKXsKICAgICAgdGhpcy4kcmVmcy5hZGRGb3JtUmVmLnJlc2V0RmllbGRzKCkKICAgIH0sCiAgICAvLyDnm5HlkKzmt7vliqDmjInpkq4KICAgIGFkZE1vdmllQ2F0ZWdvcnkoKXsKICAgICAgY29uc3QgX3RoaXMgPSB0aGlzOwogICAgICB0aGlzLiRyZWZzLmFkZEZvcm1SZWYudmFsaWRhdGUoYXN5bmMgdmFsaWQgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHZhbGlkKQogICAgICAgIGlmICghdmFsaWQpIHJldHVybgogICAgICAgIC8v6aKE5qCh6aqM5oiQ5Yqf77yM5Y+R572R57uc6K+35rGCCiAgICAgICAgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wb3N0WydDb250ZW50LVR5cGUnXSA9ICdhcHBsaWNhdGlvbi9qc29uJwogICAgICAgIGF3YWl0IGF4aW9zLnBvc3QoJ3N5c01vdmllQ2F0ZWdvcnknLCBKU09OLnN0cmluZ2lmeShfdGhpcy5hZGRGb3JtKSkudGhlbihyZXNwID0+IHsKICAgICAgICAgIGNvbnNvbGUubG9nKHJlc3ApCiAgICAgICAgICBpZiAocmVzcC5kYXRhLmNvZGUgIT09IDIwMCl7CiAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ+a3u+WKoOeUteW9seexu+WIq+Wksei0pe+8gScpCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAvL+makOiXj+a3u+WKoOWvueivneahhgogICAgICAgIHRoaXMuYWRkRGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgLy/ph43mlrDliqDovb3liJfooagKICAgICAgICB0aGlzLmdldE1vdmllQ2F0ZWdvcnlMaXN0KCkKICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+a3u+WKoOeUteW9seexu+WIq+aIkOWKn++8gScpCiAgICAgIH0pCiAgICB9LAogICAgLy8g5pi+56S65L+u5pS55a+56K+d5qGG77yM5Zue5pi+5pWw5o2uCiAgICBzaG93RWRpdERpYWxvZyhpZCl7CiAgICAgIGNvbnN0IF90aGlzID0gdGhpcwogICAgICBheGlvcy5nZXQoJ3N5c01vdmllQ2F0ZWdvcnkvJyArIGlkICkudGhlbihyZXNwID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwKQogICAgICAgIF90aGlzLmVkaXRGb3JtID0gcmVzcC5kYXRhLmRhdGEKICAgICAgfSkKICAgICAgdGhpcy5lZGl0RGlhbG9nVmlzaWJsZSA9IHRydWUKICAgIH0sCiAgICAvLyDnm5HlkKzkv67mlLnlr7nor53moYbnmoTlhbPpl63kuovku7YKICAgIGVkaXREaWFsb2dDbG9zZWQoKXsKICAgICAgdGhpcy4kcmVmcy5lZGl0Rm9ybVJlZi5yZXNldEZpZWxkcygpCiAgICB9LAogICAgLy8g5L+u5pS557G75Yir5YiG57G75L+h5oGv5bm25o+Q5LqkCiAgICBlZGl0TW92aWVDYXRlZ29yeUluZm8oKXsKICAgICAgdGhpcy4kcmVmcy5lZGl0Rm9ybVJlZi52YWxpZGF0ZShhc3luYyB2YWxpZCA9PiB7CiAgICAgICAgY29uc3QgX3RoaXMgPSB0aGlzCiAgICAgICAgaWYgKCF2YWxpZCkgcmV0dXJuCiAgICAgICAgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5wdXRbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nCiAgICAgICAgYXdhaXQgYXhpb3MucHV0KCdzeXNNb3ZpZUNhdGVnb3J5JywgSlNPTi5zdHJpbmdpZnkoX3RoaXMuZWRpdEZvcm0pKS50aGVuKHJlc3AgPT4gewogICAgICAgICAgaWYgKHJlc3AuZGF0YS5jb2RlICE9PSAyMDApewogICAgICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkv67mlLnnlLXlvbHnsbvliKvlpLHotKXvvIEnKQogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgdGhpcy5lZGl0RGlhbG9nVmlzaWJsZSA9IGZhbHNlCiAgICAgICAgdGhpcy5nZXRNb3ZpZUNhdGVnb3J5TGlzdCgpCiAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfkv67mlLnnlLXlvbHnsbvliKvmiJDlip/vvIEnKQogICAgICB9KQogICAgfSwKICAgIC8vIOebkeWQrOWkmumAieahhuWPmOWMlgogICAgaGFuZGxlU2VsZWN0aW9uQ2hhbmdlKHZhbCl7CiAgICAgIHRoaXMubXVsdGlwbGVTZWxlY3Rpb24gPSB2YWwKICAgIH0sCiAgICBhc3luYyBtdWx0aXBsZURlbGV0ZSgpewogICAgICBjb25zdCBfdGhpcyA9IHRoaXMKICAgICAgLy/or6Lpl67nlKjmiLfmmK/lkKbnoa7orqTliKDpmaQKICAgICAgY29uc3QgcmVzcCA9IGF3YWl0IHRoaXMuJGNvbmZpcm0oJ+atpOaTjeS9nOWwhuawuOS5heWIoOmZpOi/meS6m+adoeebriwg5piv5ZCm57un57utPycsICfmj5DnpLonLCB7CiAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICfnoa7lrponLAogICAgICAgIGNhbmNlbEJ1dHRvblRleHQ6ICflj5bmtognLAogICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICB9KS5jYXRjaChlcnIgPT4gZXJyKQoKICAgICAgLy8g55So5oi356Gu6K6k5Yig6ZmkLCByZXNw5Li65a2X56ym5LiyImNvbmZpcm0iCiAgICAgIC8vIOeUqOaIt+WPlua2iOWIoOmZpO+8jHJlc3DkuLrlrZfnrKbkuLIiY2FuY2VsIgogICAgICBpZiAocmVzcCA9PT0gJ2NhbmNlbCcpewogICAgICAgIHJldHVybiBfdGhpcy4kbWVzc2FnZS5pbmZvKCflt7Llj5bmtojliKDpmaQnKQogICAgICB9CgogICAgICBsZXQgaWRzID0gW10KICAgICAgdGhpcy5tdWx0aXBsZVNlbGVjdGlvbi5mb3JFYWNoKGRhdGEgPT4gewogICAgICAgIGlkcy5wdXNoKGRhdGEubW92aWVDYXRlZ29yeUlkKQogICAgICB9KQogICAgICBhd2FpdCBheGlvcy5kZWxldGUoJ3N5c01vdmllQ2F0ZWdvcnkvJyArIGlkcykudGhlbihyZXNwID0+IHsKICAgICAgICBpZiAocmVzcC5kYXRhLmNvZGUgIT09IDIwMCl7CiAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoJ+aJuemHj+WIoOmZpOeUteW9seexu+WIq+Wksei0pe+8gScpCiAgICAgICAgfQogICAgICB9KQogICAgICB0aGlzLmdldE1vdmllQ2F0ZWdvcnlMaXN0KCkKICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfmibnph4/liKDpmaTnlLXlvbHnsbvliKvmiJDlip/vvIEnKQogICAgfSwKICAgIC8v5qC55o2uaWTliKDpmaTlr7nlupTnmoTnsbvliKvliIbnsbsKICAgIGFzeW5jIGRlbGV0ZU1vdmllQ2F0ZWdvcnlCeUlkKGlkKXsKICAgICAgY29uc3QgX3RoaXMgPSB0aGlzCiAgICAgIC8v6K+i6Zeu55So5oi35piv5ZCm56Gu6K6k5Yig6ZmkCiAgICAgIGNvbnN0IHJlc3AgPSBhd2FpdCB0aGlzLiRjb25maXJtKCfmraTmk43kvZzlsIbmsLjkuYXliKDpmaTor6XmnaHnm64sIOaYr+WQpue7p+e7rT8nLCAn5o+Q56S6JywgewogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAn56Gu5a6aJywKICAgICAgICBjYW5jZWxCdXR0b25UZXh0OiAn5Y+W5raIJywKICAgICAgICB0eXBlOiAnd2FybmluZycKICAgICAgfSkuY2F0Y2goZXJyID0+IGVycikKCiAgICAgIC8vIOeUqOaIt+ehruiupOWIoOmZpCwgcmVzcOS4uuWtl+espuS4siJjb25maXJtIgogICAgICAvLyDnlKjmiLflj5bmtojliKDpmaTvvIxyZXNw5Li65a2X56ym5LiyImNhbmNlbCIKICAgICAgY29uc29sZS5sb2cocmVzcCkKICAgICAgaWYgKHJlc3AgPT09ICdjYW5jZWwnKXsKICAgICAgICByZXR1cm4gX3RoaXMuJG1lc3NhZ2UuaW5mbygn5bey5Y+W5raI5Yig6ZmkJykKICAgICAgfQoKICAgICAgYXdhaXQgYXhpb3MuZGVsZXRlKCdzeXNNb3ZpZUNhdGVnb3J5LycgKyBpZCkudGhlbihyZXNwID0+IHsKICAgICAgICBpZiAocmVzcC5kYXRhLmNvZGUgIT09IDIwMCl7CiAgICAgICAgICBfdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCfliKDpmaTnlLXlvbHnsbvliKvlpLHotKXvvIEnKQogICAgICAgIH0KICAgICAgfSkKICAgICAgdGhpcy5nZXRNb3ZpZUNhdGVnb3J5TGlzdCgpCiAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk55S15b2x57G75Yir5oiQ5Yqf77yBJykKICAgIH0KICB9Cn0K"},{"version":3,"sources":["MovieCategory.vue"],"names":[],"mappings":";AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MovieCategory.vue","sourceRoot":"src/views/movie","sourcesContent":["<template>\n  <div>\n    <!--面包屑导航类别-->\n    <div class=\"board\">\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>电影管理</el-breadcrumb-item>\n        <el-breadcrumb-item>电影类别</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n\n\n    <!--卡片视图-->\n    <el-card class=\"box-card\">\n      <el-row :gutter=\"20\">\n        <el-col :span=\"2\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加类别</el-button>\n        </el-col>\n        <el-col :span=\"2\">\n          <el-button type=\"danger\" @click=\"multipleDelete\">批量删除类别</el-button>\n        </el-col>\n      </el-row>\n\n      <!--类别分类列表-->\n      <el-table :data=\"movieCategoryList\" style=\"width: 45%\" border stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        <el-table-column prop=\"movieCategoryId\" label=\"类别编号\" width=\"145\"></el-table-column>\n        <el-table-column prop=\"movieCategoryName\" label=\"电影类别\" width=\"180\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"150\">\n          <template slot-scope=\"scope\">\n            <el-tooltip effect=\"dark\" content=\"修改电影类别\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"showEditDialog(scope.row.movieCategoryId)\"></el-button>\n            </el-tooltip>\n            <el-tooltip effect=\"dark\" content=\"删除类别\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"deleteMovieCategoryById(scope.row.movieCategoryId)\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!--分页类别-->\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"queryInfo.pageNum\"\n          :page-sizes=\"[5, 7, 9]\"\n          :page-size=\"queryInfo.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n    </el-card>\n\n    <!--添加类别对话框-->\n    <el-dialog title=\"添加类别\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n      <!--内容主题区-->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <!--prop：在addFormRules中定义校验规则， v-model：双向绑定数据-->\n        <el-form-item label=\"电影类别\" prop=\"movieCategoryName\">\n          <el-input v-model=\"addForm.movieCategoryName\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!--底部区域-->\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"addMovieCategory\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!--修改类别对话框-->\n    <el-dialog title=\"修改类别\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n        <el-form-item label=\"类别编号\">\n          <el-input v-model=\"editForm.movieCategoryId\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"电影类别\" prop=\"movieCategoryName\">\n          <el-input v-model=\"editForm.movieCategoryName\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editMovieCategoryInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n\n</template>\n\n<script>\nexport default {\n  name: \"MovieCategory\",\n  // this.$message和this.$confirm都属于原型挂载, 在element.js中配置\n  // Vue.prototype.$message = Message\n  // Vue.prototype.$confirm = MessageBox.confirm\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pageNum: 1,\n        pageSize: 7\n      },\n      movieCategoryList: [],\n      total: 0,\n      //控制对话框的显示与隐藏\n      addDialogVisible: false,\n      //添加类别的表单数据\n      addForm: {\n        movieCategoryName: ''\n      },\n      //验证表单规则对象\n      addFormRules: {\n        movieCategoryName: [\n          { required: true, message: '请输入电影类别', trigger: 'blur' }\n        ]\n      },\n      editDialogVisible: false,\n      editForm: {},\n      editFormRules: {\n        movieCategoryName: [\n          { required: true, message: '请输入电影类别', trigger: 'blur' }\n        ]\n      },\n      multipleSelection: []\n    }\n  },\n  created() {\n    this.getMovieCategoryList()\n  },\n  methods: {\n    getMovieCategoryList() {\n      const _this = this;\n      axios.get('sysMovieCategory/find', {params: _this.queryInfo}).then(resp => {\n        console.log(resp)\n        _this.movieCategoryList = resp.data.data;\n        _this.total = resp.data.total;\n        _this.queryInfo.pageSize = resp.data.pageSize;\n        _this.queryInfo.pageNum = resp.data.pageNum;\n      })\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getMovieCategoryList()\n      console.log(newSize)\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getMovieCategoryList()\n      console.log(newPage)\n    },\n    // 监听添加对话框的关闭事件\n    addDialogClosed(){\n      this.$refs.addFormRef.resetFields()\n    },\n    // 监听添加按钮\n    addMovieCategory(){\n      const _this = this;\n      this.$refs.addFormRef.validate(async valid => {\n        console.log(valid)\n        if (!valid) return\n        //预校验成功，发网络请求\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\n        await axios.post('sysMovieCategory', JSON.stringify(_this.addForm)).then(resp => {\n          console.log(resp)\n          if (resp.data.code !== 200){\n            this.$message.error('添加电影类别失败！')\n          }\n        })\n        //隐藏添加对话框\n        this.addDialogVisible = false\n        //重新加载列表\n        this.getMovieCategoryList()\n        this.$message.success('添加电影类别成功！')\n      })\n    },\n    // 显示修改对话框，回显数据\n    showEditDialog(id){\n      const _this = this\n      axios.get('sysMovieCategory/' + id ).then(resp => {\n        console.log(resp)\n        _this.editForm = resp.data.data\n      })\n      this.editDialogVisible = true\n    },\n    // 监听修改对话框的关闭事件\n    editDialogClosed(){\n      this.$refs.editFormRef.resetFields()\n    },\n    // 修改类别分类信息并提交\n    editMovieCategoryInfo(){\n      this.$refs.editFormRef.validate(async valid => {\n        const _this = this\n        if (!valid) return\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\n        await axios.put('sysMovieCategory', JSON.stringify(_this.editForm)).then(resp => {\n          if (resp.data.code !== 200){\n            this.$message.error('修改电影类别失败！')\n          }\n        })\n        this.editDialogVisible = false\n        this.getMovieCategoryList()\n        this.$message.success('修改电影类别成功！')\n      })\n    },\n    // 监听多选框变化\n    handleSelectionChange(val){\n      this.multipleSelection = val\n    },\n    async multipleDelete(){\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      if (resp === 'cancel'){\n        return _this.$message.info('已取消删除')\n      }\n\n      let ids = []\n      this.multipleSelection.forEach(data => {\n        ids.push(data.movieCategoryId)\n      })\n      await axios.delete('sysMovieCategory/' + ids).then(resp => {\n        if (resp.data.code !== 200){\n          this.$message.success('批量删除电影类别失败！')\n        }\n      })\n      this.getMovieCategoryList()\n      this.$message.success('批量删除电影类别成功！')\n    },\n    //根据id删除对应的类别分类\n    async deleteMovieCategoryById(id){\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      console.log(resp)\n      if (resp === 'cancel'){\n        return _this.$message.info('已取消删除')\n      }\n\n      await axios.delete('sysMovieCategory/' + id).then(resp => {\n        if (resp.data.code !== 200){\n          _this.$message.success('删除电影类别失败！')\n        }\n      })\n      this.getMovieCategoryList()\n      this.$message.success('删除电影类别成功！')\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}