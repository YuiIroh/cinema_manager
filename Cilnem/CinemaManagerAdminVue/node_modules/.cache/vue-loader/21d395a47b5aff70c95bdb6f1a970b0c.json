{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\src\\views\\movie\\MovieInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\src\\views\\movie\\MovieInfo.vue","mtime":1688786001276},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688267736415},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1688267739465},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688267736415},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1688267740672}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MovieInfo.vue"],"names":[],"mappings":";AAmfile":"MovieInfo.vue","sourceRoot":"src/views/movie","sourcesContent":["<template>\n  <div>\n    <!--面包屑导航区-->\n    <div class=\"board\">\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>电影管理</el-breadcrumb-item>\n        <el-breadcrumb-item>电影信息</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n\n    <el-card class=\"box-card\">\n      <el-row :addDialogVisible=\"20\">\n        <el-col :span=\"5\">\n          <el-input v-model=\"inputMovieName\" placeholder=\"请输入电影名称\" clearable></el-input>\n        </el-col>\n        <el-col :span=\"5\">\n          <el-select class=\"el-select-search\" v-model=\"selectedMovieArea\" placeholder=\"请选择电影地区\" clearable>\n            <el-option\n                v-for=\"item in movieAreaList\"\n                :key=\"item\"\n                :label=\"item\"\n                :value=\"item\">\n            </el-option>\n          </el-select>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button class=\"el-button-search\" icon=\"el-icon-search\" @click=\"getMovieList\">搜索</el-button>\n        </el-col>\n      </el-row>\n      <el-row :gutter=\"20\" class=\"row2\">\n        <el-col :span=\"10\">\n            <el-date-picker\n                    :unlink-panels=\"true\"\n                    v-model=\"selectedDate\"\n                    type=\"datetimerange\"\n                    range-separator=\"至\"\n                    start-placeholder=\"开始日期\"\n                    end-placeholder=\"结束日期\">\n            </el-date-picker>\n        </el-col>\n\n        <el-col :span=\"4\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加电影</el-button>\n        </el-col>\n        <el-col :span=\"4\">\n          <el-button type=\"danger\" @click=\"isAbleMultipleDelete\">批量删除</el-button>\n        </el-col>\n      </el-row>\n\n<!--    电影信息列表-->\n    <el-table :data=\"movieList\" style=\"width: 100%\" border stripe @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n      <el-table-column prop=\"movieId\" label=\"#\" width=\"40\"></el-table-column>\n      <el-table-column prop=\"movieName\" label=\"电影名称\"></el-table-column>\n      <el-table-column prop=\"movieArea\" label=\"电影区域\"></el-table-column>\n      <el-table-column prop=\"movieLength\" label=\"电影时长（分钟）\"></el-table-column>\n      <el-table-column prop=\"releaseDate\" label=\"上映时间\"></el-table-column>\n      <el-table-column prop=\"movieBoxOffice\" label=\"票房\"></el-table-column>\n<!--      操作按钮-->\n      <el-table-column label=\"操作\" width=\"240\">\n        <template slot-scope=\"scope\">\n          <el-tooltip effect=\"dark\" content=\"查看电影信息详细\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n            <el-button type=\"success\" icon=\"el-icon-view\" size=\"mini\" @click=\"toMovieInfo(scope.row.movieId)\"></el-button>\n          </el-tooltip>\n          <el-tooltip effect=\"dark\" content=\"修改电影信息\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click=\"isAbleEdit(scope.row.movieId)\"></el-button>\n          </el-tooltip>\n          <el-tooltip effect=\"dark\" content=\"删除电影\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" @click=\"isAbleDelete(scope.row.movieId)\"></el-button>\n          </el-tooltip>\n          <el-tooltip effect=\"dark\" content=\"影片类别管理\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n            <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\" @click=\"showEditCategoryDialog(scope.row.movieId)\"></el-button>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <!--分页区域-->\n    <el-pagination\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n        :current-page=\"queryInfo.pageNum\"\n        :page-sizes=\"[5, 7, 9]\"\n        :page-size=\"queryInfo.pageSize\"\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\">\n    </el-pagination>\n    </el-card>\n\n    <!--添加电影对话框-->\n    <el-dialog title=\"添加电影\" :visible.sync=\"addDialogVisible\" width=\"60%\" @close=\"addDialogClosed\">\n      <!--内容主题区-->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <!--prop：在addFormRules中定义校验规则， v-model：双向绑定数据-->\n        <el-form-item label=\"电影名称\" prop=\"movieName\">\n          <el-input v-model=\"addForm.movieName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电影区域\" prop=\"movieArea\">\n          <el-select v-model=\"addForm.movieArea\" placeholder=\"请选择电影区域\" clearable >\n            <el-option\n                    v-for=\"item in movieAreaList\"\n                    :key=\"item\"\n                    :label=\"item\"\n                    :value=\"item\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"电影时长/分钟\" prop=\"movieLength\">\n          <el-input v-model=\"addForm.movieLength\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"上映时间\" prop=\"releaseDate\">\n          <el-date-picker\n              v-model=\"addForm.releaseDate\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n              type=\"datetime\"\n              placeholder=\"选择日期\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"电影简介\" prop=\"movieIntroduction\">\n          <el-input v-model=\"addForm.movieIntroduction\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"电影封面\">\n          <el-upload action=\"\" list-type=\"picture-card\"\n                     :auto-upload=\"false\" :limit=\"1\"\n                     :file-list=\"poster\" :on-exceed=\"handleExceed\"\n                     :on-change=\"handleChangeP\"\n                     :on-success=\"handleSuccessP\"\n                     :on-error=\"handleError\" ref=\"posterRef\"\n                     :http-request=\"submitFileP\">\n            <i slot=\"default\" class=\"el-icon-plus\" ></i>\n            <div slot=\"file\" slot-scope=\"{file}\">\n              <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\n              <span class=\"el-upload-list__item-actions\">\n                <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreviewP(file)\">\n                  <i class=\"el-icon-zoom-in\"></i>\n                </span>\n                <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleRemoveP(file)\">\n                  <i class=\"el-icon-delete\"></i>\n                </span>\n              </span>\n            </div>\n          </el-upload>\n          <!--放大预览-->\n          <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n          </el-dialog>\n        </el-form-item>\n        <!--        修改图集-->\n        <el-form-item label=\"电影图集\">\n          <el-upload action=\"\" list-type=\"picture-card\" :auto-upload=\"false\"\n                     :file-list=\"pics\" :on-change=\"handleChange\"\n                     :on-success=\"handleSuccess\" :on-error=\"handleError\"\n                     ref=\"pictureRef\" :http-request=\"submitFile\">\n            <i slot=\"default\" class=\"el-icon-plus\"></i>\n            <div slot=\"file\" slot-scope=\"{file}\">\n              <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\n              <span class=\"el-upload-list__item-actions\">\n                <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreview(file)\">\n                  <i class=\"el-icon-zoom-in\"></i>\n                </span>\n                <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\n                  <i class=\"el-icon-delete\"></i>\n                </span>\n              </span>\n            </div>\n          </el-upload>\n          <!--放大预览-->\n          <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n          </el-dialog>\n        </el-form-item>\n      </el-form>\n      <!--底部区域-->\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"addMovie\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n\n    <!-- 修改电影信息对话框 -->\n    <el-dialog title=\"修改电影信息\" :visible.sync=\"editDialogVisible\" width=\"60%\" @close=\"editDialogClosed\">\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n        <el-form-item label=\"电影名称\" prop=\"movieName\">\n          <el-input v-model=\"editForm.movieName\" disabled></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"电影区域\" prop=\"movieArea\">\n          <el-select v-model=\"editForm.movieArea\" placeholder=\"请选择电影区域\" clearable >\n            <el-option\n              v-for=\"item in movieAreaList\"\n              :key=\"item\"\n              :label=\"item\"\n              :value=\"item\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"电影时长/分钟\" prop=\"movieLength\">\n          <el-input v-model=\"editForm.movieLength\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"上映时间\" prop=\"releaseDate\">\n          <el-date-picker\n              v-model=\"editForm.releaseDate\"\n              value-format=\"yyyy-MM-dd HH:mm:ss\"\n              type=\"datetime\"\n              placeholder=\"选择日期\">\n          </el-date-picker>\n        </el-form-item>\n        <el-form-item label=\"电影简介\" prop=\"movieIntroduction\">\n          <el-input v-model=\"editForm.movieIntroduction\"></el-input>\n        </el-form-item>\n<!--        修改封面-->\n        <el-form-item label=\"电影封面\">\n          <el-upload action=\"\" list-type=\"picture-card\"\n                     :auto-upload=\"false\" :limit=\"1\"\n                     :file-list=\"poster\" :on-exceed=\"handleExceed\"\n                     :on-change=\"handleChangeP\"\n                     :on-success=\"handleSuccessP\"\n                     :on-error=\"handleError\" ref=\"posterEditRef\"\n                     :http-request=\"submitFileP\">\n            <i slot=\"default\" class=\"el-icon-plus\" ></i>\n            <div slot=\"file\" slot-scope=\"{file}\">\n              <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\n              <span class=\"el-upload-list__item-actions\">\n                <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreviewP(file)\">\n                  <i class=\"el-icon-zoom-in\"></i>\n                </span>\n                <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleRemoveP(file)\">\n                  <i class=\"el-icon-delete\"></i>\n                </span>\n              </span>\n            </div>\n          </el-upload>\n          <!--放大预览-->\n          <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n          </el-dialog>\n        </el-form-item>\n<!--        修改图集-->\n        <el-form-item label=\"电影图集\">\n          <el-upload action=\"\" list-type=\"picture-card\" :auto-upload=\"false\"\n                     :file-list=\"pics\" :on-change=\"handleChange\"\n                     :on-success=\"handleSuccess\"\n                     :on-error=\"handleError\" ref=\"pictureEditRef\"\n                     :http-request=\"submitFile\">\n            <i slot=\"default\" class=\"el-icon-plus\"></i>\n            <div slot=\"file\" slot-scope=\"{file}\">\n              <img class=\"el-upload-list__item-thumbnail\" :src=\"file.url\" alt=\"\">\n              <span class=\"el-upload-list__item-actions\">\n                <span class=\"el-upload-list__item-preview\" @click=\"handlePictureCardPreview(file)\">\n                  <i class=\"el-icon-zoom-in\"></i>\n                </span>\n                <span v-if=\"!disabled\" class=\"el-upload-list__item-delete\" @click=\"handleRemove(file)\">\n                  <i class=\"el-icon-delete\"></i>\n                </span>\n              </span>\n            </div>\n          </el-upload>\n          <!--放大预览-->\n          <el-dialog :visible.sync=\"dialogVisible\" append-to-body>\n            <img width=\"100%\" :src=\"dialogImageUrl\" alt=\"\">\n          </el-dialog>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editMovieInfo\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n<!--    电影类型管理界面-->\n    <el-dialog title=\"电影类型管理\" :visible.sync=\"editCategoryVisible\" width=\"60%\" @close=\"editCategoryDialogClosed\">\n<!--      <template>-->\n<!--        <el-checkbox-group-->\n<!--            v-model=\"selectedMovieCategory\">-->\n<!--          <el-checkbox v-for=\"category in movieCategoryList\" :label=\"category.movieCategoryName\" :key=\"category.movieCategoryId\">{{category.movieCategoryName}}</el-checkbox>-->\n<!--        </el-checkbox-group>-->\n<!--      </template>-->\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"电影类型\" prop=\"movieActor\">\n          <el-select v-model=\"selectedMovieCategory\" placeholder=\"请选择类型名称\" clearable>\n            <el-option\n                v-for=\"item in categoryList\"\n                :key=\"item.movieCategoryId\"\n                :label=\"item.movieCategoryName\"\n                :value=\"item.movieCategoryId\"\n                v-if=\"ifShow(item.movieCategoryId)\">\n            </el-option>\n          </el-select>\n        <el-button type=\"primary\" @click=\"addCategory()\">添加</el-button>\n        </el-form-item>\n        <el-form-item>\n              <el-tag\n                  v-for=\"tag in editCategoryForm\"\n                  :key=\"tag.movieCategoryName\"\n                  closable\n                  @close=\"deleteCategory(tag.movieCategoryId)\">\n                {{tag.movieCategoryName}}\n              </el-tag>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"MovieInfo\",\n  data() {\n    return {\n      queryInfo: {\n        movieId: '',\n        movieArea: '',\n        movieName: '',\n        startDate: '',\n        endDate: '',\n        pageNum: 1,\n        pageSize: 7\n      },\n      total: 0,\n      url: 'http://localhost:9231/',\n      //控制对话框的显示与隐藏\n      addDialogVisible: false,\n      selectedMovieCategory:[],\n      selectedMovieArea: '',\n      selectedDate: [],\n      inputMovieName: '',\n      categoryList:[],\n      movieList: [],\n      movieAreaList: [\"中国大陆\", \"美国\", \"韩国\", \"日本\", \"中国香港\", \"中国台湾\", \"泰国\", \"印度\",\n        \"法国\", \"英国\", \"俄罗斯\", \"意大利\", \"西班牙\", \"德国\", \"波兰\", \"澳大利亚\", \"伊朗\", \"其他\"],\n      editForm: {},\n      checkAbleId: {},\n      editCategoryForm:[],\n      movieId:'',\n      editDialogVisible: false,\n      editCategoryVisible: false,\n      multipleSelection: [],\n      dialogVisible: false,\n      dialogImageUrl: '',\n      disabled:false,\n      //电影封面增删变量\n      poster: [],\n      //发送给后端的JSON图片\n      posterL: [],\n      deletePostList:[],\n      //添加删除图片集 动态绑定图片列表\n      pics: [],\n      // 发送给后端的JSON图片数组\n      pictureList: [],\n      picNums:0,\n      deletePicList:[],\n      //添加电影表单数据\n      addForm: {\n        movieId: '',\n        movieName: '',\n        movieArea: '',\n        movieLength: 0,\n        releaseDate: '',\n        movieBoxOffice: '',\n        movieIntroduction: '',\n        moviePictures: '',\n        moviePoster:''\n      },\n      //添加验证表单规则对象\n      addFormRules: {\n        movieName: [\n          {required: true, message: '请输入电影名称', trigger: 'blur'}\n        ],\n        movieArea: [\n          {required: true, message: '请选择电影区域', trigger: 'blur'}\n        ]\n      },\n      //修改验证表单规则对象\n      editFormRules: {\n        movieName: [\n          {required: true, message: '请输入电影名称', trigger: 'blur'}\n        ],\n        movieArea: [\n          {required: true, message: '请选择电影区域', trigger: 'blur'}\n        ]\n      }\n    }\n  },\n  created() {\n    this.getMovieList()\n    this.getCategoryList()\n  },\n  methods: {\n    getMovieList() {\n      this.queryInfo.movieName = this.inputMovieName\n      this.queryInfo.movieArea = this.selectedMovieArea\n      if (!this.selectedDate) {\n        this.queryInfo.startDate = this.selectedDate[0]\n        this.queryInfo.endDate = this.selectedDate[1]\n      }\n      const _this = this;\n      axios.get('sysMovie/find', {params: _this.queryInfo}).then(resp => {\n        console.log(resp)\n        _this.movieList = resp.data.data;\n        _this.total = resp.data.total;\n        _this.queryInfo.pageSize = resp.data.pageSize;\n        _this.queryInfo.pageNum = resp.data.pageNum;\n      })\n    },\n    getCategoryList() {\n      const _this = this\n      axios.get('sysMovieCategory/find').then(resp=>{\n        _this.categoryList = resp.data.data;\n        console.log(_this.categoryList)\n      })\n    },\n    ifShow(id) {\n      let l = true\n      for (let i = 0; i < this.editCategoryForm.length; i++) {\n        if (id === this.editCategoryForm[i].movieCategoryId) {\n          l =false\n        }\n      }\n      return l\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getMovieList()\n      console.log(newSize)\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getMovieList()\n      console.log(newPage)\n    },\n    async submitFile() {\n      const _this = this\n      for (let i = 0; i < this.pics.length; i++) {\n        let formData = new FormData()\n        if (this.pics[i].status === 'success') {\n          let s = this.pics[i].url\n          this.pictureList.push(s.substring(s.indexOf('/images')))\n          continue\n        }\n        let file = this.pics[i].raw\n        formData.append('file', file)\n        await axios.post('upload/movie', formData).then(response => {\n          _this.pictureList.push(response.data.data)\n        })\n      }\n    },\n    async submitFileP() {\n      const _this = this\n      for (let i = 0; i < this.poster.length; i++) {\n        let formData = new FormData()\n        if (this.poster[i].status === 'success') {\n          let s = this.poster[i].url\n          this.posterL.push(s.substring(s.indexOf('/images')))\n          continue\n        }\n        let file = this.poster[i].raw\n        formData.append('file', file)\n        await axios.post('upload/movie', formData).then(response => {\n          _this.posterL.push(response.data.data)\n        })\n      }\n    },\n    // 监听添加对话框的关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n      this.$refs.pictureRef.clearFiles()\n      this.$refs.posterRef.clearFiles()\n      this.poster = []\n      this.posterL=[]\n      this.pics = []\n      this.pictureList = []\n    },\n    // 监听添加按钮\n    async addMovie() {\n      await this.submitFile()\n      await this.submitFileP()\n      this.addForm.moviePictures = JSON.stringify(this.pictureList)\n      this.addForm.moviePoster = JSON.stringify(this.posterL)\n      const _this = this\n      this.$refs.addFormRef.validate(async valid => {\n        console.log(valid)\n        if (!valid) return\n        //预校验成功，发网络请求\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\n        await axios.post('sysMovie', JSON.stringify(_this.addForm)).then(resp => {\n          console.log(resp)\n          if (resp.data.code !== 200) {\n            this.$message.error('添加电影信息失败！')\n          }\n        })\n        //隐藏添加对话框\n        this.addDialogVisible = false\n        //重新加载列表\n        this.getMovieList()\n        this.$message.success('添加电影信息成功！')\n      })\n    },\n    // 监听修改对话框的关闭事件\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields()\n      this.$refs.pictureEditRef.clearFiles()\n      this.$refs.posterEditRef.clearFiles()\n      this.pics = []\n      this.pictureList = []\n      this.posterL = []\n      this.poster = []\n    },\n    //监听修改类别对话框的关闭事件\n    editCategoryDialogClosed(){\n      this.selectedMovieCategory = ''\n    },\n    // 修改电影信息对话框\n    async editMovieInfo() {\n      await this.submitFile()\n      this.editForm.moviePictures = JSON.stringify(this.pictureList)\n      await this.submitFileP()\n      this.editForm.moviePoster = JSON.stringify(this.posterL)\n      this.$refs.editFormRef.validate(async valid => {\n        const _this = this\n        if (!valid) return\n        let success = true\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\n        await axios.put('sysMovie', JSON.stringify(_this.editForm)).then(resp => {\n          if (resp.data.code !== 200) {\n            this.$message.error('修改电影信息失败！')\n            success = false\n          }\n        })\n        if (!success) return\n        for(let s of this.deletePicList){\n          await axios.get('/upload/delete?filePath=' + s.substring(s.indexOf('/images')))\n        }\n        for(let s of this.deletePostList){\n          await axios.get('/upload/delete?filePath=' + s.substring(s.indexOf('/images')))\n        }\n        this.editDialogVisible = false\n        this.getMovieList()\n        this.$message.success('修改电影信息成功！')\n      })\n    },\n    handleChange(file, filelist) {\n      this.pics = filelist.slice(0)\n      console.log(this.pics)\n    },\n    handleChangeP(file, filelist) {\n      this.poster = filelist\n      console.log(this.poster)\n    },\n    handleSuccess(response) {\n      this.pictureList.push(response.data)\n      this.addForm = JSON.stringify(this.pictureList)\n      this.editForm = JSON.stringify(this.pictureList)\n    },\n    handleSuccessP(response) {\n      this.posterL.push(response.data)\n      this.addForm = JSON.stringify(this.posterL)\n      this.editForm = JSON.stringify(this.posterL)\n    },\n    handlePictureCardPreview(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handlePictureCardPreviewP(file) {\n      this.dialogImageUrl = file.url;\n      this.dialogVisible = true;\n    },\n    handleRemove(file,filelist) {\n      const filePath = file.url\n      console.log(filePath)\n      const idx = this.pics.findIndex(x => x.url === filePath)\n      if(file.status === 'success'){\n        this.deletePicList.push(file.url)\n      }\n      this.pics.splice(idx, 1)\n    },\n    handleRemoveP(file) {\n      const filePath = file.url\n      console.log(filePath)\n      const idx = this.poster.findIndex(x=> x.url === filePath)\n      if(file.status === 'success'){\n        this.deletePostList.push(file.url)\n      }\n      this.poster.splice(idx,1)\n    },\n    handleError(err) {\n      console.log(err)\n    },\n    toMovieInfo(id) {\n      window.open('http://localhost:9232/movieInfo/' + id)\n    },\n    isAbleEdit(id) {\n      this.checkAbleId.movieId = id\n      axios.get('sysSession/isAbleEdit', {params: this.checkAbleId}).then(response => {\n        console.log(response.data.total)\n        let sessions = response.data.data\n        if (response.data.total === 0) {\n          console.log('空的可改')\n          this.showEditDialog(id)\n        } else {\n          console.log('修改前判断有未完成session')\n          let sessionIds = ''\n          for (let temp of sessions) {\n            console.log(temp)\n            sessionIds += temp.sessionId+' '\n          }\n          console.log('sessionIds is : '+sessionIds)\n          this.$alert('抱歉！有未完成电影场次，不能修改电影信息。\\n'+'导致异常的场次编号为: '+sessionIds, '修改请求异常通知', {\n            confirmButtonText: '我知道了',\n            callback: action => {\n              this.$router.push('/movie')\n            }\n          })\n        }\n      })\n    },\n    // 显示修改对话框，回显数据\n    async showEditDialog(id) {\n      const _this = this\n      await axios.get('sysMovie/find/' + id).then(resp => {\n        console.log(resp)\n        _this.editForm = resp.data.data\n      })\n      for (const item of JSON.parse(this.editForm.moviePictures)) {\n        let pic = {}\n        pic['name'] = ''\n        pic['url'] = this.global.base + item\n        this.pics.push(pic)\n      }\n      for (const item of JSON.parse(this.editForm.moviePoster)) {\n        let pic = {}\n        pic['name'] = ''\n        pic['url'] = this.global.base + item\n        this.poster.push(pic)\n      }\n      this.editDialogVisible = true\n    },\n    //显示修改类别对话框,回显数据\n    async showEditCategoryDialog(id){\n      const _this = this\n      _this.movieId = id\n      await axios.get('sysMovie/find/'+id).then(response=>{\n        _this.editCategoryForm = response.data.data.movieCategoryList\n        })\n      this.editCategoryVisible = true\n    },\n    //取消修改\n    cancelEdit(){\n      this.editDialogVisible = false\n      this.deletePicList.splice(0,this.deletePicList.length)\n      this.deletePostList.splice(0,this.deletePostList.length)\n    },\n    // 监听多选框变化\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n    },\n    // 批量删除前校验\n    async isAbleMultipleDelete() {\n      let ableDelete = true\n      let ids = ''\n      for (let i = 0; i < this.multipleSelection.length; i++) {\n        this.checkAbleId.movieId = this.multipleSelection[i].movieId\n        const { data : res } = await axios.get('sysSession/isAbleEdit', {params: this.checkAbleId})\n        if (res.data.length !== 0) {\n          ids += this.multipleSelection[i].movieId + ' '\n          ableDelete = false\n        }\n      }\n      if (ableDelete === false) {\n        this.$alert('抱歉！有未完成电影场次，不能批量删除电影信息。\\n' + '导致异常的电影编号为: ' + ids, '批量删除请求异常通知', {\n          confirmButtonText: '我知道了',\n          callback: action => {\n            this.$router.push('/movie')\n          }\n        })\n        return\n      }\n      await this.multipleDelete()\n    },\n    // 批量删除电影\n    async multipleDelete() {\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      if (resp === 'cancel') {\n        return _this.$message.info('已取消删除')\n      }\n\n      let ids = []\n      this.multipleSelection.forEach(data => {\n        let item = data.movieId\n        ids.push(item)\n      })\n      console.log(ids)\n      axios.defaults.headers.post['Content-Type'] = 'application/json'\n      await axios.delete('sysMovie/' + ids, JSON.stringify(ids)).then(resp => {\n        console.log(123)\n        if (resp.data.code !== 200) {\n          this.$message.success('批量删除电影失败！')\n        }\n      })\n      this.getMovieList()\n      this.$message.success('批量删除电影成功！')\n    },\n    async isAbleDelete(id) {\n      this.checkAbleId.movieId = id\n      await axios.get('sysSession/isAbleEdit', {params: this.checkAbleId}).then(response => {\n        console.log(response.data.total)\n        let sessions = response.data.data\n        if (response.data.total === 0) {\n          this.deleteMovieById(id)\n        } else {\n          console.log('删除前判断有未完成session')\n          let sessionIds = ''\n          for (let temp of sessions) {\n            console.log(temp)\n            sessionIds += temp.sessionId+' '\n          }\n          console.log('sessionIds is : '+sessionIds)\n          this.$alert('抱歉！有未完成电影场次，不能删除电影信息。\\n'+'导致异常的场次编号为: '+sessionIds, '删除请求异常通知', {\n            confirmButtonText: '我知道了',\n            callback: action => {\n              this.$router.push('/movie')\n            }\n          })\n        }\n      })\n    },\n    // 单个删除电影\n    async deleteMovieById(id) {\n      let deleteInfo = id\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      console.log(resp)\n      if (resp === 'cancel') {\n        return _this.$message.info('已取消删除')\n      }\n\n      console.log(deleteInfo)\n      axios.defaults.headers.post['Content-Type'] = 'application/json'\n      await axios.delete('sysMovie/' + deleteInfo, JSON.stringify(deleteInfo)).then(resp => {\n        if (resp.data.code !== 200) {\n          _this.$message.success('删除电影信息失败！')\n        }\n      })\n      this.getMovieList()\n      this.$message.success('删除电影信息成功！')\n    },\n    async deleteCategory(categoryId){\n      console.log('类型id')\n      console.log(categoryId)\n      const _this = this\n      await axios.delete('sysMovieToCategory/'+this.movieId+'/'+categoryId).then(resp=>{\n        console.log(resp)\n        _this.$message.success('删除类型成功')\n      })\n      await axios.get('sysMovie/find/'+this.movieId).then(response=>{\n        _this.editCategoryForm = response.data.data.movieCategoryList\n      })\n    },\n    handleExceed(){\n      this.$message.error('电影封面不能超过一张!')\n    },\n    async addCategory(){\n      const _this = this\n      await axios.post('sysMovieToCategory/'+this.movieId+'/'+this.selectedMovieCategory).then(resp=>{\n        console.log(resp)\n        if (resp.data.code !==200) return this.$alert('添加电影类别失败', '添加电影类别异常通知', {\n          confirmButtonText: '我知道了'\n        })\n        this.$message.success(\"添加电影类别成功\")\n      })\n      axios.get('sysMovie/find/'+this.movieId).then(response=>{\n        _this.editCategoryForm = response.data.data.movieCategoryList\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.row2{\n  margin-top: 20px;\n}\n.el-tag{\n    margin: 0 10px 10px 0;\n}\n.el-button-search{\n  margin: 0px 0px 0px 10px;\n}\n.el-select-search{\n  margin: 0 0px 0px 20px;\n}\n</style>\n"]}]}