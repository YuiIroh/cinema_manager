{"remainingRequest":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\src\\views\\role\\RoleInfo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\src\\views\\role\\RoleInfo.vue","mtime":1651665518000},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688267736415},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\babel-loader\\lib\\index.js","mtime":1688267739465},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1688267736415},{"path":"D:\\Work\\WorkSpace\\GitWorkSpace\\TenShop\\resource\\CinemaManager\\src\\CinemaManagerAdminVue\\node_modules\\vue-loader\\lib\\index.js","mtime":1688267740672}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RoleInfo.vue"],"names":[],"mappings":";AAwfile":"RoleInfo.vue","sourceRoot":"src/views/role","sourcesContent":["<template>\n  <div>\n    <!--面包屑导航区域-->\n    <div class=\"board\">\n      <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n        <el-breadcrumb-item :to=\"{ path: '/welcome' }\">首页</el-breadcrumb-item>\n        <el-breadcrumb-item>权限管理</el-breadcrumb-item>\n        <el-breadcrumb-item>角色信息管理</el-breadcrumb-item>\n      </el-breadcrumb>\n    </div>\n\n\n    <!-- 卡片视图 -->\n    <el-card>\n      <el-row :gutter=\"20\">\n        <el-col :span=\"2.5\">\n          <el-button type=\"primary\" @click=\"addDialogVisible = true\">添加角色</el-button>\n        </el-col>\n        <el-col :span=\"2\">\n          <el-button type=\"danger\" @click=\"isAbleMultipleDelete\">批量删除</el-button>\n        </el-col>\n      </el-row>\n\n      <el-table :data=\"roleList\" border stripe @selection-change=\"handleSelectionChange\">\n        <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n        <el-table-column prop=\"roleId\" label=\"角色编号\" width=\"145\"></el-table-column>\n        <el-table-column prop=\"roleName\" label=\"角色名称\" width=\"180\"></el-table-column>\n        <el-table-column prop=\"roleDesc\" label=\"角色描述\" width=\"180\"></el-table-column>\n        <el-table-column label=\"操作\" width=\"200\">\n          <template slot-scope=\"scope\">\n            <el-tooltip effect=\"dark\" content=\"修改角色信息\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\"\n                         @click=\"showEditDialog(scope.row.roleId)\"></el-button>\n            </el-tooltip>\n            <el-tooltip effect=\"dark\" content=\"删除角色\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\"\n                         @click=\"isAbleDelete(scope.row.roleId)\"></el-button>\n            </el-tooltip>\n            <el-tooltip effect=\"dark\" content=\"分配权限\" placement=\"top\" :enterable=\"false\" :open-delay=\"500\">\n              <el-button type=\"warning\" icon=\"el-icon-setting\" size=\"mini\"\n                         @click=\"showSetRightDialog(scope.row)\"></el-button>\n            </el-tooltip>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!--分页区域-->\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"queryInfo.pageNum\"\n          :page-sizes=\"[5, 7, 9]\"\n          :page-size=\"queryInfo.pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n\n    </el-card>\n\n    <!--添加角色对话框-->\n    <el-dialog title=\"添加角色\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\n      <!--内容主题区-->\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"addForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"addForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <!--底部区域-->\n      <span slot=\"footer\" class=\"dialog-footer\">\n      <el-button @click=\"addDialogVisible = false\">取 消</el-button>\n      <el-button type=\"primary\" @click=\"addRole\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!--修改角色对话框-->\n    <el-dialog title=\"修改角色\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\n        <el-form-item label=\"角色编号\" prop=\"roleId\">\n          <el-input v-model=\"editForm.roleId\" disabled></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"editForm.roleName\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"角色描述\" prop=\"roleDesc\">\n          <el-input v-model=\"editForm.roleDesc\"></el-input>\n        </el-form-item>\n      </el-form>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"editRole\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n    <!-- 分配权限对话框 -->\n    <el-dialog\n        title=\"提示\"\n        :visible.sync=\"setRightDialogVisible\"\n        width=\"50%\"\n        @close=\"setRightDialogClosed\">\n      <!-- 树形控件 -->\n      <el-tree :data=\"resourceList\"\n               :props=\"treeProps\"\n               node-key=\"id\"\n               :default-checked-keys=\"defKeys\"\n               ref=\"treeRef\"\n               show-checkbox\n               default-expand-all></el-tree>\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"setRightDialogVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"submitRights\">确 定</el-button>\n      </span>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script>\nimport moment from \"moment\";\nexport default {\n  name: \"RoleInfo\",\n  data() {\n    return {\n      queryInfo: {\n        query: '',\n        pageNum: 1,\n        pageSize: 7\n      },\n      roleList: [],\n      resourceList: [],\n      //树形控件的属性对象\n      treeProps: {\n        children: 'children',\n        label: 'name'\n      },\n      //默认勾选的权限列表\n      defKeys: [],\n      total: 0,\n      addDialogVisible: false,\n      //添加角色的表单数据\n      addForm: {\n        roleName: '',\n        roleDesc: ''\n      },\n      //验证表单规则对象\n      addFormRules: {\n        roleName: [\n          {required: true, message: '请输入角色名', trigger: 'blur'}\n        ],\n        roleDesc: [\n          {required: true, message: '请输入角色描述', trigger: 'blur'}\n        ]\n      },\n      editDialogVisible: false,\n      editForm: {\n        roleId: null,\n        roleName: '',\n        roleDesc: ''\n      },\n      checkAbleId: {},\n      editFormRules: {\n        roleName: [\n          {required: true, message: '请输入角色名', trigger: 'blur'}\n        ],\n        roleDesc: [\n          {required: true, message: '请输入角色描述', trigger: 'blur'}\n        ]\n      },\n      multipleSelection: [],\n      //分配权限对话框的显示与隐藏\n      setRightDialogVisible: false,\n      //当前分配权限的id\n      roleId: ''\n    }\n  },\n  created() {\n    this.getRoleList()\n  },\n  methods: {\n    async getRoleList() {\n      const {data: res} = await axios.get('sysRole', {params: this.queryInfo})\n      this.roleList = res.data;\n      this.total = res.total\n      this.queryInfo.pageNum = res.pageNum\n      this.queryInfo.pageSize = res.pageSize\n    },\n    handleSizeChange(newSize) {\n      this.queryInfo.pageSize = newSize\n      this.getRoleList()\n    },\n    handleCurrentChange(newPage) {\n      this.queryInfo.pageNum = newPage\n      this.getRoleList()\n    },\n    // 监听添加对话框的关闭事件\n    addDialogClosed() {\n      this.$refs.addFormRef.resetFields()\n    },\n    // 监听添加按钮\n    addRole() {\n      const _this = this;\n      this.$refs.addFormRef.validate(async valid => {\n        if (!valid) return\n        //预校验成功，发网络请求\n\n        axios.defaults.headers.post['Content-Type'] = 'application/json'\n        const {data: res} = await axios.post('sysRole', JSON.stringify(_this.addForm))\n        if (res.code !== 200) return this.$message.error(res.msg)\n        //隐藏添加对话框\n        this.addDialogVisible = false\n        //重新加载列表\n        await this.getRoleList()\n        this.$message.success('添加角色信息成功！')\n      })\n    },\n    // 显示修改对话框，回显数据\n    async showEditDialog(id) {\n      const _this = this\n      await axios.get('sysRole/' + id).then(resp => {\n        console.log(resp)\n        _this.editForm = resp.data.data\n      })\n      this.editDialogVisible = true\n    },\n    // 监听修改对话框的关闭事件\n    editDialogClosed() {\n      this.$refs.editFormRef.resetFields()\n    },\n    // 修改角色信息并提交\n    editRole() {\n      this.$refs.editFormRef.validate(async valid => {\n        const _this = this\n        if (!valid) return\n        axios.defaults.headers.put['Content-Type'] = 'application/json'\n        const {data: res} = await axios.put('sysRole/', JSON.stringify(_this.editForm))\n        if (res.code !== 200) return this.$message.error(res.msg)\n\n        this.editDialogVisible = false\n        await this.getRoleList()\n        this.$message.success('修改角色信息成功！')\n      })\n    },\n    // 监听多选框变化\n    handleSelectionChange(val) {\n      this.multipleSelection = val\n    },\n    // 批量删除前校验\n    async isAbleMultipleDelete() {\n      let ableMultipleDelete = true\n      let ids = ''\n      for (let i = 0; i < this.multipleSelection.length; i++) {\n        this.checkAbleId.roleId = this.multipleSelection[i].roleId\n        const { data : res } = await axios.get('sysUser', {params: this.checkAbleId})\n        if (res.data.length !== 0) {\n          ids += this.multipleSelection[i].roleId + ' '\n          ableMultipleDelete = false\n        }\n      }\n      if (ableMultipleDelete === false) {\n        this.$alert('抱歉！有用户与当前要删除的角色相关联，不能删除角色信息。\\n' + '导致异常的角色编号为: ' + ids, '批量删除请求异常通知', {\n          confirmButtonText: '我知道了',\n          callback: action => {\n            this.$router.push('/role')\n          }\n        })\n        return\n      }\n      await this.multipleDelete()\n    },\n    async multipleDelete() {\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除这些条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      if (resp === 'cancel') {\n        return _this.$message.info('已取消删除')\n      }\n\n      let ids = []\n      this.multipleSelection.forEach(data => {\n        ids.push(data.roleId)\n      })\n      let success = true\n      await axios.delete('sysRole/' + ids).then(resp => {\n        if (resp.data.code !== 200) {\n          success = false;\n        }\n      })\n      if (!success) return this.$message.error('批量删除资源信息失败！')\n      await this.getRoleList()\n      this.$message.success('批量删除资源信息成功！')\n    },\n    async isAbleDelete(id) {\n      this.checkAbleId.roleId = id\n      await axios.get('sysUser', {params: this.checkAbleId}).then(response => {\n        console.log(response.data.total)\n        let users = response.data.data\n        if (response.data.total === 0) {\n          console.log('空的可改')\n          this.deleteRoleById(id)\n        } else {\n          console.log('删除前判断有相关联的user')\n          let ids = ''\n          for (let temp of users) {\n            console.log(temp)\n            ids += temp.userId+' '\n          }\n          console.log('users is : '+ids)\n          this.$alert('抱歉！有用户与当前要删除的角色相关联，不能删除角色信息。\\n'+'导致异常的用户编号为: '+ids, '删除请求异常通知', {\n            confirmButtonText: '我知道了',\n            callback: action => {\n              this.$router.push('/role')\n            }\n          })\n        }\n      })\n    },\n    //根据id删除对应的资源信息\n    async deleteRoleById(roleId) {\n      const _this = this\n      //询问用户是否确认删除\n      const resp = await this.$confirm('此操作将永久删除该条目, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).catch(err => err)\n\n      // 用户确认删除, resp为字符串\"confirm\"\n      // 用户取消删除，resp为字符串\"cancel\"\n      console.log(resp)\n      if (resp === 'cancel') {\n        return _this.$message.info('已取消删除')\n      }\n\n      let success = true\n      await axios.delete('sysRole/' + roleId).then(resp => {\n        if (resp.data.code !== 200) {\n          success = false\n        }\n      })\n      if (!success) return _this.$message.error('删除角色信息失败！')\n      await this.getRoleList()\n      this.$message.success('删除角色信息成功！')\n    },\n    //展示分配权限对话框\n    async showSetRightDialog(role) {\n      this.roleId = role.roleId\n      const {data: res} = await axios.get('sysResource/tree')\n      this.resourceList = res.data\n      console.log(role)\n      await this.getLeafKeys(role, this.defKeys)\n      console.log('defKeys' + this.defKeys)\n      this.setRightDialogVisible = true\n    },\n    //获取角色对应的所有具体权限id\n    getLeafKeys(node, arr) {\n      if(!node) return\n      if (!node.children) {\n        return arr.push(node.id)\n      }\n\n      node.children.forEach(item => this.getLeafKeys(item, arr))\n    },\n    //关闭分配权限对话框，刷新defKeys\n    setRightDialogClosed() {\n      this.defKeys = []\n    },\n    async submitRights() {\n      const keys = [\n          ...this.$refs.treeRef.getCheckedKeys(true)\n      ]\n      const _this = this\n      axios.defaults.headers.post['Content-Type'] = 'application/json'\n      const {data : res} = await axios.post('sysRole/' + _this.roleId, JSON.stringify(keys))\n      if(res.code !== 200) return this.$message.error(\"更新权限失败！\")\n\n      this.$message.success(\"更新权限成功！\")\n      await this.getRoleList()\n      this.setRightDialogVisible = false\n    }\n  }\n}\n</script>\n\n<style scoped>\n\n</style>\n"]}]}